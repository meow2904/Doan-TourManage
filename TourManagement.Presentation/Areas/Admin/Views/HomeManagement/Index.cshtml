@{
    ViewBag.Title = "Home Management";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

}

<div class="wrapper">
    <div class="row">
        <div class="col-3 col-m-6 col-sm-6">
            <div class="counter bg-primary">
                <p>
                    <i class="fas fa-tasks"></i>
                </p>
                <h3>@ViewBag.total</h3>
                <p>Total Order</p>
            </div>
        </div>
        <div class="col-3 col-m-6 col-sm-6">
            <div class="counter bg-warning">
                <p>
                    <i class="fas fa-spinner"></i>
                </p>
                <h3>@ViewBag.orderPending</h3>
                <p>Pending Order</p>
            </div>
        </div>
        <div class="col-3 col-m-6 col-sm-6">
            <div class="counter bg-success">
                <p>
                    <i class="fas fa-check-circle"></i>
                </p>
                <h3>@ViewBag.orderConfirmed</h3>
                <p>Confirmed Order</p>
            </div>
        </div>
        <div class="col-3 col-m-6 col-sm-6">
            <div class="counter bg-danger">
                <p>
                    <i class="fas fa-bug"></i>
                </p>
                <h3>@ViewBag.orderCancel</h3>
                <p>Cancel Order</p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-8 col-m-12 col-sm-12">
            <div class="card">
                <div>
                    <div class="text-center p-3">
                        <div class="p-2 font-weight-bold">Statistic</div>
                        <div class="d-flex justify-content-center">
                            <div class="px-2">
                                From <input type="date" id="fromDate" required />
                            </div>
                            <div class="px-2">
                                To <input type="date" id="toDate" required/>
                            </div>
                            <button type="button" id="btnSumit" onclick="getOrders()">Filter</button>
                        </div>
                    </div>
                    <canvas id="bar_chart" height="200" width="400">

                    </canvas>
                </div>
            </div>
        </div>


    </div>
</div>

@section scripts{
    <script>
        //get data
        function getOrders() {
            $.ajax({
                url: '@Url.Action("GetOrdersByMonth", "HomeManagement")',
                type: 'GET',
                contentType: 'application/json;charset=utf-8',
                data: { fromDate: $('#fromDate').val(), toDate: $('#toDate').val()},
                success: function (data) {
                    var listOrders = JSON.parse(data.ListOrders)
                    //for (let item of listOrders) {
                    //    console.log(item)
                    //}

                    if (myChart instanceof Chart) {
                        myChart.destroy();
                    }
                    showData(listOrders)
                }
            })
        }


        var dynamicColors = function () {
            var r = Math.floor(Math.random() * 255);
            var g = Math.floor(Math.random() * 255);
            var b = Math.floor(Math.random() * 255);
            return "rgb(" + r + "," + g + "," + b + ")";
        }
        var myChart
        function showData(rs) {
            var labels = []
            var fromDate = new Date($('#fromDate').val())
            var toDate = new Date($('#toDate').val())

            //set labels for chart
            var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            for (let i = fromDate.getMonth(); i <= toDate.getMonth(); i++) {
                labels.push(months[i])
            }

            const dataOrder = []
            const backgroundColor = []

            for (let i = fromDate.getMonth(); i <= toDate.getMonth(); i++) {
                var flag = i
                var dataPrice = 0

                for (let item of rs) {
                    if (new Date(item.OrderDate).getMonth() === flag) {
                        dataPrice += item.SumPrice
                    }
                    console.log(item)
                }

                dataOrder.push(dataPrice)
                backgroundColor.push(dynamicColors())
            }

            const dataChart = {
                labels: labels,
                datasets: [{
                    label: 'Revenue of month ( đ/tháng )',
                    data: dataOrder,
                    backgroundColor: backgroundColor,
                    borderWidth: 1
                }]
            };

            const config = {
                type: 'bar',
                data: dataChart,
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                },
            };

           
            myChart = new Chart(
                document.getElementById('bar_chart'),
                config
            );

        }
    </script>
}