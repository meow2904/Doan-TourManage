@model IEnumerable<TourManagement.Models.DBContext.Tour>

@{
    ViewBag.Title = "Tour management";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    int totalPage = @ViewBag.TotalPage;
    int pageRange = 3;
    int currentPage = @ViewBag.CurrentPage;

    var prevDisabled = (currentPage - 1 <= 0 ? "disabled" : "");
    var nextDisabled = (currentPage >= totalPage ? "disabled" : "");
}

<div>
    <h2>Tours Management</h2>
    <hr />
</div>
<div class="py-2">
    <a href="@Url.Action("Create", "ToursManagement")" class="btn btn-primary">ADD</a>
</div>

<table class="table table-bordered">
    <tr>
        <th>
            <p>Tour Id</p>
        </th>
        <th>
            <p>Name</p>
        </th>

        <th>
            <label>Time</label>
        </th>
        <th>
            <label>Time start</label>
        </th>
        <th>
            Action
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @item.Id
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Time) ngày
            </td>
            <td>
                @item.TimeStart.Value.ToString("MM/dd/yyyy")
            </td>

            <td class="d-flex border-bottom-0 border-left-0 border-right-0">
                <form action="@Url.Action("DeleteTour","ToursManagement", new { id=item.Id })" method="post">
                    <a href="@Url.Action("Edit", "ToursManagement", new { id=item.Id })" class="btn btn-outline-primary mx-1">Edit</a>
                    <button type="submit" onclick="return confirm('Are you sure to delete this tour?');" class="btn btn-outline-danger mx-1">Delete</button>
                </form>
            </td>
        </tr>
    }

</table>

<nav aria-label="Page navigation example" class="row w-100">
    <ul class="pagination col-12 justify-content-center">
        <li class="page-item"><a class="btn page-link @prevDisabled" href="@Url.Action("Index", "ToursManagement", new {page=(currentPage - 1 <= 0 ? 1 : currentPage - 1) })">Previous</a></li>
        @for (int i = 1; i <= totalPage; i++)
        {
            if (i >= currentPage - pageRange && i <= currentPage + pageRange)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "ToursManagement", new {page = i })">@i</a>
                </li>
            }
        }
        <li class="page-item">
            <a class="btn page-link @nextDisabled" href="@Url.Action("Index", "ToursManagement", new {page=(currentPage + 1 > totalPage ? totalPage : currentPage + 1)})">Next</a>
        </li>
    </ul>
</nav>